{"version":3,"sources":["APILink.js","Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["APILink","props","name","apiLinkData","apiLink","properties","url","className","onClick","updateDefinitionLink","Sidebar","organizationConfig","apiLinks","definitionList","getOrganizationData","orgName","i","length","push","displayName","App","state","definitionLink","swaggerhub","bind","this","setState","Config","orgData","SwaggerUI","domNode","document","getElementById","inputMethod","inputResource","inputParams","fetch","method","then","response","ok","json","Error","organization","apis","newLink","id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2gBAkBeA,EAfC,SAAAC,GACZ,IAAIC,EAAOD,EAAME,YAAYD,KACzBE,EAAUH,EAAME,YAAYE,WAAW,GAAGC,IAMhD,OACE,qBAAKC,UAAU,WAAWC,QAAS,WAJjCP,EAAMQ,qBAAqBL,IAI7B,SACGF,KCuBQQ,EAjCC,SAAAT,GACZ,IAAIU,EAAqBV,EAAMU,mBAC3BC,EAAW,GAEf,GAA6B,OAAzBX,EAAMY,eACNZ,EAAMa,oBAAoBH,EAAmBI,cAE7C,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAMY,eAAeI,OAAQD,IAEzCJ,EAASM,KACL,cAAC,EAAD,CAEIf,YAAaF,EAAMY,eAAeG,GAClCP,qBAAsBR,EAAMQ,sBAFvBO,IAS3B,OACE,sBAAKT,UAAU,WAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,6BAAKI,EAAmBQ,gBAE5B,sBAAKZ,UAAU,gBAAf,UACI,0CACCK,SCsDEQ,G,wDA5Eb,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACDoB,MAAQ,CACTV,mBAAoB,KACpBE,eAAgB,KAChBS,eAAgB,MAElB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKV,oBAAsB,EAAKA,oBAAoBU,KAAzB,gBAC3B,EAAKf,qBAAuB,EAAKA,qBAAqBe,KAA1B,gBATb,E,sDAYnB,WACEC,KAAKC,SAAS,CACZf,mBAAqBgB,EAAOC,Y,gCAIhC,WACEC,IAAU,CACRC,QAASC,SAASC,eAAe,YACjC1B,IAAKmB,KAAKJ,MAAMC,mB,wBAIpB,SAAWW,EAAaC,EAAeC,GACrC,IAAI7B,EAAM,GAOV,OALEA,EADE6B,EACI,mCAAqCD,EAAgB,IAAMC,EAE3D,mCAAqCD,EAGtCE,MAAM9B,EAAK,CACd+B,OAAQJ,IACTK,MAAK,SAAAC,GACN,GAAIA,EAASC,GACX,OAAOD,EAASE,OAChB,MAAM,IAAIC,MAAM,4CACjBJ,MAAK,SAAAG,GACN,OAAOA,O,iCAIX,SAAoBE,GAAe,IAAD,OAE5BT,EAAgBS,EAEpBlB,KAAKF,WAAW,MAAOW,EAHL,uCAGiCI,MAAK,SAAAC,GACtD,EAAKb,SAAS,CACZb,eAAgB0B,EAASK,Y,kCAK/B,SAAqBC,GACnBpB,KAAKC,SAAS,CACZJ,eAAgBuB,M,oBAIpB,WACE,OACE,sBAAKtC,UAAU,MAAf,UACE,cAAC,EAAD,CACEI,mBAAoBc,KAAKJ,MAAMV,mBAC/BE,eAAgBY,KAAKJ,MAAMR,eAC3BJ,qBAAsBgB,KAAKhB,qBAC3BK,oBAAqBW,KAAKX,sBAE5B,qBAAKgC,GAAG,oB,GAvEEC,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAASC,eAAe,SAM1BgB,M","file":"static/js/main.b0f8848d.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nconst APILink = props => {\r\n    let name = props.apiLinkData.name\r\n    let apiLink = props.apiLinkData.properties[0].url\r\n\r\n    function handleClick() {\r\n      props.updateDefinitionLink(apiLink)\r\n    }\r\n\r\n  return (  \r\n    <div className=\"api-link\" onClick={() => handleClick()}>\r\n      {name}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default APILink;","import React from 'react';\r\nimport APILink from './APILink.js'\r\n\r\nconst Sidebar = props => {\r\n    let organizationConfig = props.organizationConfig\r\n    let apiLinks = []\r\n\r\n    if (props.definitionList === null) {\r\n        props.getOrganizationData(organizationConfig.orgName)\r\n    } else {\r\n        for (let i = 0; i < props.definitionList.length; i++) {\r\n            //if (props.definitionList[i].properties[4].value === \"true\") {\r\n                apiLinks.push(\r\n                    <APILink \r\n                        key={i}\r\n                        apiLinkData={props.definitionList[i]}\r\n                        updateDefinitionLink={props.updateDefinitionLink}\r\n                    />\r\n                )\r\n            //}\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className=\"side-bar\">\r\n        <div className=\"side-bar-header\">\r\n            <h1>{organizationConfig.displayName}</h1>\r\n        </div>\r\n        <div className=\"side-bar-body\">\r\n            <h3>API DOCS</h3>\r\n            {apiLinks}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\nimport './App.css'\nimport SwaggerUI from 'swagger-ui';\nimport Config from './organization_config.json';\nimport Sidebar from './Sidebar.js'\nimport '../node_modules/swagger-ui/dist/swagger-ui.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        organizationConfig: null,\n        definitionList: null,\n        definitionLink: null//\"https://petstore.swagger.io/v2/swagger.json\"\n      }\n      this.swaggerhub = this.swaggerhub.bind(this)\n      this.getOrganizationData = this.getOrganizationData.bind(this)\n      this.updateDefinitionLink = this.updateDefinitionLink.bind(this)\n    }\n\n  componentWillMount() {\n    this.setState({\n      organizationConfig:  Config.orgData,\n    })\n  }\n\n  componentDidUpdate() {\n    SwaggerUI({\n      domNode: document.getElementById(\"api-data\"),\n      url: this.state.definitionLink\n    })\n  }\n\n  swaggerhub(inputMethod, inputResource, inputParams) {\n    let url = \"\"\n    if (inputParams) {\n      url = \"https://api.swaggerhub.com/apis/\" + inputResource + \"?\" + inputParams\n    } else {\n      url = \"https://api.swaggerhub.com/apis/\" + inputResource\n    }\n    \n    return fetch(url, {\n        method: inputMethod\n    }).then(response => {\n      if (response.ok) {\n        return response.json()\n      } throw new Error('There was an issue requesting the API')\n    }).then(json => {\n      return json\n    })\n  }\n\n  getOrganizationData(organization) {\n    let inputParams = \"page=0&limit=10&sort=NAME&order=ASC\"\n    let inputResource = organization;\n  \n    this.swaggerhub('GET', inputResource, inputParams).then(response => {\n      this.setState({\n        definitionList: response.apis\n      })\n    })\n  }\n\n  updateDefinitionLink(newLink) {\n    this.setState({\n      definitionLink: newLink\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Sidebar \n          organizationConfig={this.state.organizationConfig}\n          definitionList={this.state.definitionList}\n          updateDefinitionLink={this.updateDefinitionLink}\n          getOrganizationData={this.getOrganizationData}\n        />\n        <div id=\"api-data\" />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}